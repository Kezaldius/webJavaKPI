openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/products/{id}:
    get:
      tags:
      - product-controller
      operationId: getProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
    put:
      tags:
      - product-controller
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/products:
    get:
      tags:
      - product-controller
      operationId: getAllProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductDTO"
    post:
      tags:
      - product-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
components:
  schemas:
    ProductRequest:
      type: object
      description: Дані для створення або оновлення товару
      properties:
        name:
          type: string
          description: "Назва товару. Повинна містити космічні терміни (star, galaxy,\
            \ comet)"
          example: Зоряний пил 'Galaxy Dust'
          maxLength: 100
          minLength: 3
        price:
          type: number
          format: double
          description: Ціна товару. Повинна бути строго більше 0
          example: 99.99
          minimum: 0.0
        description:
          type: string
          description: Детальний опис космічного товару
          example: Найкращий пил з туманності Андромеди
      required:
      - name
    ProductDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: double
        description:
          type: string
